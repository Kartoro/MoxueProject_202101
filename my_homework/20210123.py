# 1:
# 打印出所有的"水仙花数"，所谓"水仙花数"是指一个三位数，其各位数字立方和等于该数本身。
# 例如：153是一个"水仙花数"，因为153=1的三次方＋5的三次方＋3的三次方。

def shuixian_flower():
    lst = []
    for m in range(100,1000):
        # m = cba
        a = m%10 # gewei
        b = (m%100 - a)/10 # shiwei
        c = (m - a - b*10)/100
        if (m == a*a*a + b*b*b + c*c*c):
            lst.append(m)
    return lst

print(shuixian_flower())

# a = 153%10 # gewei
# b = (153%100 - a)/10 # shiwei
# c = (153 - a - b*10)/100

# print(a) 
# print(b)  
# print(c)      
# print(153 == a*a*a + b*b*b + c*c*c)     
        
# 2. [easy] 多数元素 lc.169
# 给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。
# 你可以假设数组是非空的，并且给定的数组总是存在多数元素。
# 示例 1：
# 输入：[3,2,3]
# 输出：3
# 示例 2：
# 输入：[2,2,1,1,1,2,2]
# 输出：2
def array(a):
    s = set()
    for i in a:
        c = a.count(i)
        if c > (len(a)/2):
            s.add(i)
    for j in s:
        print(j)

array([3,2,3])


# 3. [easy] 有效的括号 lc.20
# 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。
# 有效字符串需满足：
# 左括号必须用相同类型的右括号闭合。
# 左括号必须以正确的顺序闭合。
# 注意空字符串可被认为是有效字符串。
# 示例 1:
# 输入: "()"
# 输出: true
# 示例 2:
# 输入: "()[]{}"
# 输出: true

#def kuohao(s):



# 4. [medium] 最大数 lc.179
# 给定一组非负整数 nums，重新排列它们每个数字的顺序（每个数字不可拆分）使之组成一个最大的整数。
# 注意：输出结果可能非常大，所以你需要返回一个字符串而不是整数。
# 示例 1：
# 输入：nums = [10,2]
# 输出："210"
# 示例 2：
# 输入：nums = [3,30,34,5,9]
# 输出："9534330"
def large(nums):
    for i in nums:
        str_nums.append['%d' %i]
    print(str_nums)



# *5. [hard] 二叉树中的最大路径和 lc.124